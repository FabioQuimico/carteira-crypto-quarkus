# Habilita CORS
quarkus.http.cors=true
# Habilita Swagger em producao
quarkus.swagger-ui.enable=true
quarkus.swagger-ui.always-include=true

# Configuracao do banco de dados profile default
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${POSTGRES_USER:postgres}
quarkus.datasource.password=${POSTGRES_PASSWORD:docker}
quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_DOCKER_PORT:5432}/${POSTGRES_DB:carteira-cryptos}

# Apenas atualiza a base de dados criada ou novo esquema na primeira execucao
quarkus.hibernate-orm.database.generation=update
# Nao insere log das execucoes de SQL
quarkus.hibernate-orm.log.sql=false
# Carrega arquivo de massa de dados
quarkus.hibernate-orm.sql-load-script=import.sql

# Configuracao do banco de dados profile desenvolvimento
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.username=root
%dev.quarkus.datasource.password=root
%dev.quarkus.datasource.jdbc.url=jdbc:h2:~/fiap/carteira-cryptos

# Dropa a base de dados e cria uma nova a cada execucao do projeto
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
# Insere log das execucoes de SQL
%dev.quarkus.hibernate-orm.log.sql=true
# Carrega arquivo de massa de dados
%dev.quarkus.hibernate-orm.sql-load-script=import.sql

# Configuracao do banco de dados profile teste
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.username=root
%test.quarkus.datasource.password=root
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb

# Dropa a base de dados e cria uma nova a cada execucao do projeto
%test.quarkus.hibernate-orm.database.generation=drop-and-create
# Insere log das execucoes de SQL
%test.quarkus.hibernate-orm.log.sql=true
# Carrega arquivo de massa de dados
%test.quarkus.hibernate-orm.sql-load-script=no-file

# Seta porta diferente para execucao dos testes para evitar conflito com a aplicacao
quarkus.http.test-port=8888

# Configuração do RestClient de Cotação
quarkus.rest-client.extensions-api.url=http://${COTACAO_CRYPTO_HOST:localhost}:${COTACAO_CRYPTO_PORT:5555}/
quarkus.rest-client.extensions-api.scope=javax.inject.Singleton